name: CI

on:
  pull_request:
    branches:
      - "master"
      - "develop"
      - "release/*"
  workflow_dispatch:

jobs:
  check-mr-naming:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate MR title by convention
        env:
          MR_TITLE: ${{ github.event.pull_request.title }}
          TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}
        run: |
          echo "DEBUG: MR_TITLE='$MR_TITLE'"
          STANDARD_REGEX='^[a-zA-Z0-9_-]+[[:space:]]*\|[[:space:]]*[a-zA-Z0-9_-]+[[:space:]]*\|[[:space:]]*(feature|fix|chore|refactor|docs|perf)[[:space:]]*\|[[:space:]]*#[0-9]+[[:space:]]*-[[:space:]]+.+$'
          RELEASE_REGEX='^release[[:space:]]*\|[[:space:]]*[a-zA-Z0-9._-]+[[:space:]]*\|[[:space:]]*#[0-9]+[[:space:]]*-[[:space:]]+.+$'
          if [[ "$TARGET_BRANCH" == "master" || "$TARGET_BRANCH" =~ ^release/? ]]; then
            if [[ ! "$MR_TITLE" =~ $RELEASE_REGEX ]]; then
              echo "❌ Invalid release PR title: $MR_TITLE"
              echo "Example: release | 1.2.0 | #52 - Release Description"
              exit 1
            fi
            echo "✔ Release PR title is valid: $MR_TITLE"
          else
            if [[ ! "$MR_TITLE" =~ $STANDARD_REGEX ]]; then
              echo "❌ Invalid PR title: $MR_TITLE"
              echo "Example: backend | user-auth | feature | #1234 - implement JWT login"
              exit 1
            fi
            echo "✔ PR title is valid: $MR_TITLE"
          fi

      - name: Upload source as artifact
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: .

  lint:
    runs-on: ubuntu-latest
    needs: check-mr-naming
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shared-setup
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Run linter (ktlint)
        run: ./gradlew ktlintCheck

  static-analysis:
    runs-on: ubuntu-latest
    needs: check-mr-naming
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shared-setup
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Run static analysis (detekt)
        run: ./gradlew detekt

  spellcheck:
    runs-on: ubuntu-latest
    needs: check-mr-naming
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shared-setup
      - name: Run spellcheck (yaspeller)
        run: |
          npm install -g yaspeller
          yaspeller --lang ru,en --ignore-uppercase --file-extensions ".kt,.kts,.md,.txt" .

  build:
    runs-on: ubuntu-latest
    needs: [lint, static-analysis, spellcheck]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shared-setup
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build --no-daemon
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/**/*.jar
            build/libs/**/*.war

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/shared-setup
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./build/libs
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew test --no-daemon
